#include <stdio.h>
#include "thread.h"

// static void go(int n);
// static void divfunc(int n);

#define NTHREADS 9
#define ROW 3
#define COL 3

static thread_t threads[NTHREADS];

int c_matrix[ROW][COL];
int a_matrix[COL][ROW] = {{-1,1,3},{1,-1,2},{1,2,3}};
int b_matrix[COL][ROW] = {{3,2,-1},{-2,-1,2},{3,3,1}};

int i = 0, j = 0;

void dot_prod(int a){

  for(int temp = 0; temp < ROW; temp++)
    c_matrix[i][j] += a_matrix[i][temp] * b_matrix[temp][j];
}

void mat_display(){

  printf("\n");

  for(i = 0; i < ROW; i++){
    for(j = 0; j < COL; j++){
      printf("%d  ", c_matrix[i][j]);
    }
    printf("\n");
  }
}

int main(){

  int thread_i = 0;

  for(i = 0; i < ROW; i++){
    for(j = 0; j < COL; j++){
      thread_create(&(threads[thread_i]), &dot_prod, thread_i);
      thread_join(threads[thread_i]);
      thread_i++;
    }
  }

  mat_display();

return 0;
}
